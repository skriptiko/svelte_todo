{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Card.svelte",
    "../../CardHeader.svelte",
    "../../Filter.svelte",
    "../../TodoList.svelte",
    "../../TodoListItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Card from './Card.svelte'\n</script>\n\n<style lang=\"scss\">.App {\n  background: linear-gradient(38deg, #de354c 35%, #3c1874 35%);\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center; }\n  .App_Content {\n    position: relative; }\n    .App_Content .Logo {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      width: 80px;\n      height: 80px;\n      transform: translate(-50%, -70%);\n      z-index: 2; }\n\n/*# sourceMappingURL=App.svelte.css.map */</style>\n\n<div class=\"App\">\n  <div class=\"App_Content\">\n    <img class=\"Logo\" src=\"./images/logo.png\" alt=\"logo\" />\n    <Card />\n  </div>\n\n</div>\n",
    "<script>\n  import CardHeader from \"./CardHeader.svelte\";\n  import Filter from \"./Filter.svelte\";\n  import TodoList from \"./TodoList.svelte\";\n\n  let data = [\n    { id: 1, title: \"One\", completed: false },\n    { id: 2, title: \"Second\", completed: false },\n    { id: 3, title: \"Thirst\", completed: false }\n  ];\n\n  let filter = \"all\";\n\n  const handleFilterClick = (type) => {\n    filter = type;\n  };\n\n  $: filteredData =\n    filter === \"all\"\n      ? data\n      : filter === \"completed\"\n      ? data.filter((todo) => todo.completed)\n      : data.filter((todo) => !todo.completed);\n</script>\n\n<style lang=\"scss\">.Card {\n  width: 400px;\n  border-radius: 4px;\n  background-color: #F3F3F3;\n  box-shadow: 0 0 10px rgba(40, 55, 71, 0.5); }\n\n/*# sourceMappingURL=Card.svelte.css.map */</style>\n\n<div class=\"Card\">\n  <CardHeader countOfTasks={filteredData.length} />\n\n  <Filter selected={filter} onClick={handleFilterClick} />\n\n  <TodoList list={filteredData} />\n</div>\n",
    "<style lang=\"scss\">.CardHeader {\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(40, 55, 71, 0.1);\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px; }\n  .CardHeader_Date {\n    display: flex;\n    flex-direction: column;\n    font-size: 20px; }\n\n/*# sourceMappingURL=CardHeader.svelte.css.map */</style>\n\n<script>\n  import { format } from \"date-fns\";\n\n  export let countOfTasks;\n\n  const now = new Date();\n\n  $: day = format(now, `EEEE, do`);\n  $: month = format(now, `LLLL`);\n\n\n</script>\n\n<div class=\"CardHeader\">\n  <div class=\"CardHeader_Date\">\n    <h3 class=\"CardHeader_Day\">{day}</h3>\n    <span class=\"CardHeader_Month\">{month}</span>\n  </div>\n  <div class=\"CardHeader_Count\">\n    <span>{countOfTasks}</span>\n  </div>\n</div>\n",
    "<script>\n  export let onClick\n  export let selected\n</script>\n\n<style lang=\"scss\">.Filter {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid #283747;\n  border-bottom: 1px solid #283747;\n  padding: 20px; }\n  .Filter_Button {\n    font-size: 18px;\n    text-transform: uppercase;\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    display: flex;\n    align-items: center; }\n    .Filter_Button.active {\n      color: #932432; }\n\n/*# sourceMappingURL=Filter.svelte.css.map */</style>\n\n<div class=\"Filter\">\n  <button\n    class=\"Filter_Button\"\n    on:click={() => onClick('all')}\n    class:active={selected === 'all'}>\n    All\n  </button>\n  <button\n    class=\"Filter_Button\"\n    on:click={() => onClick('active')}\n    class:active={selected === 'active'}>\n    Active\n  </button>\n  <button\n    class=\"Filter_Button\"\n    on:click={() => onClick('completed')}\n    class:active={selected === 'completed'}>\n    Completed\n  </button>\n</div>\n",
    "<script>\n  import TodoListItem from './TodoListItem.svelte'\n\n  export let list\n</script>\n\n<style lang=\"scss\">.TodoList {\n  padding: 20px; }\n\n/*# sourceMappingURL=TodoList.svelte.css.map */</style>\n\n<div class=\"TodoList\">\n  {#if list.length}\n    {#each list as item}\n      <TodoListItem {...item} />\n      <!--        on:deleteTodo={handleDeleteTodo}-->\n      <!--        on:toggleComplete={handleToggleComplete} -->\n    {/each}\n  {:else}'Empty list...'{/if}\n\n</div>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n    import { AiFillDelete } from \"react-icons/ai\";\n    import { fly } from 'svelte/transition';\n\n    export let id;\n    export let title;\n    export let completed;\n\n    const dispatch = createEventDispatcher();\n\n    const deleteTodo = () => {\n        dispatch('deleteTodo', {\n            id: id\n        });\n    }\n    const toggleComplete = () => {\n        dispatch('toggleComplete', {\n            id: id\n        });\n    }\n</script>\n\n<style lang=\"scss\">.TodoListItem {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation-duration: 0.3s; }\n  .TodoListItem_Left {\n    display: flex;\n    align-items: center; }\n  .TodoListItem_Label {\n    margin-left: 12px; }\n  .TodoListItem_Remove {\n    cursor: pointer;\n    margin-left: 15px; }\n  .TodoListItem .completed {\n    text-decoration: line-through;\n    color: grey; }\n\n/*# sourceMappingURL=TodoListItem.svelte.css.map */</style>\n\n<div class=\"TodoListItem\">\n    <div class=\"TodoListItem_Left\" transition:fly=\"{{ y: 20, duration: 300 }}\">\n        <input type=\"checkbox\" bind:checked={completed} on:change={toggleComplete}>\n        <span class=\"TodoListItem_Label\" class:completed={completed}>{title}</span>\n    </div>\n    <div class=\"TodoListItem_Remove\" on:click={deleteTodo}>\n        <AiFillDelete />\n    </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAImB,IAAI,4BAAC,CAAC,AACvB,UAAU,CAAE,gBAAgB,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAC5D,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AAAE,CAAC,AAC1B,YAAY,4BAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,AAAE,CAAC,AACrB,0BAAY,CAAC,KAAK,cAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,OAAO,CAAE,CAAC,AAAE,CAAC;ACKA,KAAK,cAAC,CAAC,AACxB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AAAE,CAAC;AC7B5B,WAAW,eAAC,CAAC,AAC9B,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACvC,sBAAsB,CAAE,GAAG,CAC3B,uBAAuB,CAAE,GAAG,AAAE,CAAC,AAC/B,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,IAAI,AAAE,CAAC;ACNH,OAAO,eAAC,CAAC,AAC1B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,cAAc,eAAC,CAAC,AACd,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,CACzB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AAAE,CAAC,AACtB,cAAc,OAAO,eAAC,CAAC,AACrB,KAAK,CAAE,OAAO,AAAE,CAAC;ACfJ,SAAS,cAAC,CAAC,AAC5B,OAAO,CAAE,IAAI,AAAE,CAAC;ACgBC,aAAa,8BAAC,CAAC,AAChC,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,kBAAkB,CAAE,IAAI,AAAE,CAAC,AAC3B,kBAAkB,8BAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AAAE,CAAC,AACxB,mBAAmB,8BAAC,CAAC,AACnB,WAAW,CAAE,IAAI,AAAE,CAAC,AACtB,oBAAoB,8BAAC,CAAC,AACpB,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,AAAE,CAAC,AACtB,4BAAa,CAAC,UAAU,eAAC,CAAC,AACxB,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AAAE,CAAC"
}